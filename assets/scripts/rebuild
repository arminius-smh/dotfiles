#!/usr/bin/env bash
Help()
{
    echo "rebuild nixos-systems"
    echo
    echo "syntax: rebuild [-h|a|u]"
    echo "options:"
    echo "h     print this help"
    echo "u     update nix flake"
    echo "t     test(no boot entry) new config"
    echo "s     switch to new config"
    echo "b     only boot-entry for new config"
    echo "B     only build new config"
    echo
}
COMMAND=""
OPTIONS=""

while getopts ":hutsbB" option; do
    case $option in
        h)
            Help
            exit ;;
        u)
            update=true ;;
        t)
            COMMAND_OVERRIDE="test" ;;
        s)
            COMMAND_OVERRIDE="switch" ;;
        b)
            COMMAND_OVERRIDE="boot" ;;
        B)
            COMMAND_OVERRIDE="build" ;;
        \?)
            echo "Error: invalid option"
            exit ;;
    esac
done

pushd "$DOTFILES_PATH" || exit
git pull
git submodule update --recursive

nixfmt .
echo "NixOS Rebuilding..."
hostname=$(hostname)

git add --all # add all files for the rebuild

if [[ "$hostname" == "phoenix" ]]; then
    COMMAND="switch"
    OPTIONS=""
elif [[ "$hostname" == "discovery" ]]; then
    COMMAND="switch"
    OPTIONS="-- --impure"
elif [[ "$hostname" == "excelsior" ]]; then
    COMMAND="boot"
    OPTIONS=""
fi

if [[ -v COMMAND_OVERRIDE ]]; then
    COMMAND=$COMMAND_OVERRIDE
fi

if [[ "$update" == true ]]; then
    COMMAND+=" --update"
fi

echo "COMMAND: $COMMAND"

# shellcheck disable=SC2086
if ! nh os $COMMAND -H "$hostname" '.?submodules=1' $OPTIONS; then
    echo "NixOS rebuild failed"
    exit
fi

git add --all # in case flake.lock changes
popd || exit
